!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("Algorithms",[],e):"object"==typeof exports?exports.Algorithms=e():t.Algorithms=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,r){"use strict";function n(t){this.data=t}function i(t){if(t.length>0){this.head=new n(t[0]);for(var e=this.head,r=1;r<t.length;++r)e.next=new n(t[r]),e=e.next}}i.printRecursion=function(t){return t?i.printRecursion(t.next):null},i.prototype={print:function(){for(var t=this.head;t;)console.log(t.data),t=t.next},toArray:function(){for(var t=[],e=this.head;e;)t.push(e.data),e=e.next;return t},insert:function(t,e){var r=new n(t);if(!this.head)return this.head=r,this.head;if(0===e){var i=this.head;return this.head=r,this.head.next=i,this.head}for(var h=this.head,o=1;h.next;){if(void 0!==e&&o===e){var s=h.next;return h.next=r,r.next=s,r}h=h.next,++o}return h.next=r,r},shift:function(){if(!this.head)return null;var t=this.head;return this.head=this.head.next,t},pop:function(){if(!this.head)return null;for(var t=this.head,e=null;t.next;)e=t,t=t.next;return e.next=null,t},delete:function(t){if(!this.head)return null;if(0===t)return this.head=this.head.next,this.head;for(var e=this.head,r=0,n=null;e.next;){if(void 0!==t&&r===t)return n.next=e.next,this.head;n=e,e=e.next,++r}return this.head},reverse:function(){if(!this.head)return null;for(var t=this.head,e=null;t;){var r=t.next;t.next=e,e=t,t=r}return this.head=e,this.head},reverseRecursion:function(t){t.next?(this.reverseRecursion(t.next),t.next.next=t,t.next=null):this.head=t}},t.exports={LinkedList:i,Node:n}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"DataStructures",{enumerable:!0,get:function(){return i.default}});var n,i=(n=r(2))&&n.__esModule?n:{default:n}},function(t,e,r){"use strict";var n=r(0).LinkedList;t.exports={ArrayQueue:r(3),ArrayStack:r(4),BinarySearchTree:r(5),LinkedListQueue:r(6),LinkedListStack:r(7),LinkedList:n,DoublyLinkedList:r(8)}},function(t,e,r){"use strict";function n(){this._queue=Array(10).fill(null),this._front=-1,this._rear=-1}n.prototype={enqueue:function(t){(this._rear+1)%this._queue.length!==this._front&&(this.isEmpty()?this._rear=this._front=0:this._rear=(this._rear+1)%this._queue.length,this._queue[this._rear]=t)},dequeue:function(){var t;if(!this.isEmpty())return this._front===this._rear?(t=this._queue[this._front],this._front=this._rear=-1):(t=this._queue[this._front],++this._front),t},front:function(){return this._queue[this._front]},isEmpty:function(){return-1===this._front&&-1===this._rear}},t.exports=n},function(t,e,r){"use strict";function n(){this._stack=[],this._top=-1}n.prototype={push:function(t){return++this._top,this._stack.length>=this._top+1?this._stack[this._top]=t:this._stack.push(t),this._stack},pop:function(){if(!this.isEmpty()){var t=this._stack[this._top];return this._stack[this._top]=void 0,--this._top,t}},top:function(){return this._stack[this._top]},isEmpty:function(){return-1===this._top}},t.exports=n},function(t,e,r){"use strict";function n(t){this._data=t}function i(t){this._root=new n(t)}n.prototype={get data(){return this._data},set data(t){this._data=t},get left(){return this._left},set left(t){t&&t.constructor===Number?this._left=new n(t):this._left=t},get right(){return this._right},set right(t){t&&t.constructor===Number?this._right=new n(t):this._right=t},insert:function(t){this.data?t>this.data?this.right?this.right.insert(t):this.right=t:t<this.data&&(this.left?this.left.insert(t):this.left=t):this.data=t},search:function(t){return!!this.data&&(t>this.data&&this.right?this.right.search(t):t<this.data&&this.left?this.left.search(t):t===this.data)}},i.prototype={get root(){return this._root},set root(t){this._root=t},insert:function(t){this.root?this.root.insert(t):this.root=new n(t)},search:function(t){return!!this.root&&this.root.search(t)},findMin:function(){if(this.root){return function t(e){return e.left?t(e.left):e.data}(this.root)}},findMax:function(){if(this.root){return function t(e){return e.right?t(e.right):e.data}(this.root)}},delete:function(t){!function t(e,r){if(e){if(r<e.data)return t(e.left,r);if(r>e.data)return t(e.right,r);if(e.left&&e.right){for(var n=e.right;n.left;)n=n.left;return e.data=n.data,e.right=t(e.right,n.data),e}return e.left||e.right}}(this.root,t)},levelOrder:function(){var t=[];if(this.root){var e=[];for(e.push(this.root);e.length>0;){var r=e.shift();t.push(r.data),r.left&&e.push(r.left),r.right&&e.push(r.right)}}return t},preOrder:function(){var t=[];return this.root&&function e(r){t.push(r.data),r.left&&e(r.left),r.right&&e(r.right)}(this.root),t},inOrder:function(){var t=[];return this.root&&function e(r){r.left&&e(r.left),t.push(r.data),r.right&&e(r.right)}(this.root),t},postOrder:function(){var t=[];return this.root&&function e(r){r.left&&e(r.left),r.right&&e(r.right),t.push(r.data)}(this.root),t},maxDepth:function(){if(!this.root)return 0;var t=function t(e){return e?Math.max(t(e.left),t(e.right))+1:0};return t(this.root)},isValid:function(){return function t(e,r,n){return!e||!(e.data<=r||e.data>=n)&&t(e.left,r,e.data)&&t(e.right,e.data,n)}(this.root,-1/0,1/0)},pathSum:function(t){return function t(e,r){return!!e&&(r-=e.data,e.left||e.right?t(e.left,r)||t(e.right,r):0===r)}(this.root,t)},isSymmetric:function(){if(!this.root)return!0;return function t(e,r){return e&&r?e.data===r.data&&t(e.left,r.right)&&t(e.right,r.left):e===r}(this.root.left,this.root.right)}},t.exports=i},function(t,e,r){"use strict";function n(t){this.data=t}function i(){}i.prototype={enqueue:function(t){this.isEmpty()?this._rear=this._front=new n(t):this._rear=this._rear.next=new n(t)},dequeue:function(){var t=this._front;return t===this._rear?this._rear=this._front=void 0:t.next&&(this._front=t.next),t.data},front:function(){return this._front.data},isEmpty:function(){return void 0===this._front&&void 0===this._rear}},t.exports=i},function(t,e){function r(t){this.data=t}function n(){}n.printRecursion=function(t){return t?n.printRecursion(t.next):null},n.prototype={print:function(){for(var t=this.head;t;)console.log(t.data),t=t.next},toArray:function(){for(var t=[],e=this.head;e;)t.push(e.data),e=e.next;return t},push:function(t){var e=new r(t);return e.next=this.head,this.head=e,this.head.data},pop:function(){if(!this.head)return null;var t=this.head;return this.head=t.next,t.data},top:function(){return this.head.data},isEmpty:function(){return!this.head},reverse:function(){for(var t=new n;this.head;)t.push(this.shift());for(;!t.isEmpty();)this.insert(t.pop());return this}},t.exports=n},function(t,e,r){"use strict";var n=r(0),i=n.LinkedList,h=n.Node;function o(t){h.call(this,t)}function s(t){if(t.length>0){this.head=new o(t[0]);for(var e=this.head,r=1;r<t.length;++r){var n=new o(t[r]);n.prev=e,e.next=n,e=e.next}}}s.prototype=Object.create(i.prototype),s.prototype.constructor=s,s.prototype.insert=function(t,e){var r=new h(t);if(!this.head)return this.head=r,this.head;if(0===e){var n=this.head;return this.head=r,this.head.next=n,this.head}for(var i=this.head,o=1;i.next;){if(void 0!==e&&o===e){var s=i.next;return i.next=r,r.prev=i,r.next=s,s.prev=r,r}i=i.next,++o}return i.next=r,r.prev=i,r},s.prototype.shift=function(){if(this.head){var t=this.head;return this.head=t.next,this.head.prev=null,t}},s.prototype.delete=function(t){if(!this.head)return null;if(0===t)return this.head=this.head.next,this.head;for(var e=this.head,r=0,n=null;e.next;){if(void 0!==t&&r===t){var i=e.next;return n.next=i,i.prev=n,this.head}n=e,e=e.next,++r}return this.head},s.prototype.reverse=function(){if(!this.head)return null;for(var t=this.head,e=null;t;){var r=t.next;t.next=e,e&&(e.prev=t),e=t,t=r}return this.head=e,this.head},s.prototype.reverseRecursion=function(){return function t(e){if(e&&e.next){t(e.next);var r=e.next;r.next=e,e.prev=r,e.next=null}}(this.head),this.head},t.exports=s}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbGdvcml0aG1zL3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly9BbGdvcml0aG1zL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL0FsZ29yaXRobXMvLi9zcmMvZGF0YS1zdHJ1Y3R1cmVzL2xpbmtlZC1saXN0LmpzIiwid2VicGFjazovL0FsZ29yaXRobXMvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQWxnb3JpdGhtcy8uL3NyYy9kYXRhLXN0cnVjdHVyZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQWxnb3JpdGhtcy8uL3NyYy9kYXRhLXN0cnVjdHVyZXMvYXJyYXktcXVldWUuanMiLCJ3ZWJwYWNrOi8vQWxnb3JpdGhtcy8uL3NyYy9kYXRhLXN0cnVjdHVyZXMvYXJyYXktc3RhY2suanMiLCJ3ZWJwYWNrOi8vQWxnb3JpdGhtcy8uL3NyYy9kYXRhLXN0cnVjdHVyZXMvYmluYXJ5LXNlYXJjaC10cmVlLmpzIiwid2VicGFjazovL0FsZ29yaXRobXMvLi9zcmMvZGF0YS1zdHJ1Y3R1cmVzL2xpbmtlZC1saXN0LXF1ZXVlLmpzIiwid2VicGFjazovL0FsZ29yaXRobXMvLi9zcmMvZGF0YS1zdHJ1Y3R1cmVzL2xpbmtlZC1saXN0LXN0YWNrLmpzIiwid2VicGFjazovL0FsZ29yaXRobXMvLi9zcmMvZGF0YS1zdHJ1Y3R1cmVzL2RvdWJseS1saW5rZWQtbGlzdC5qcyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwidGhpcyIsImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJOb2RlIiwiZGF0YSIsIkxpbmtlZExpc3QiLCJsZW5ndGgiLCJoZWFkIiwiY3VyciIsIm5leHQiLCJwcmludFJlY3Vyc2lvbiIsIm5vZGUiLCJwcmludCIsImNvbnNvbGUiLCJsb2ciLCJ0b0FycmF5IiwiYXJyYXkiLCJwdXNoIiwiaW5zZXJ0IiwiaW5kZXgiLCJuZXdOb2RlIiwidGVtcCIsImN1cnJJbmRleCIsInVuZGVmaW5lZCIsInNoaWZ0IiwiZmlyc3QiLCJwb3AiLCJwcmV2IiwiZGVsZXRlIiwicmV2ZXJzZSIsInJldmVyc2VSZWN1cnNpb24iLCJfZGF0YVN0cnVjdHVyZXMiLCJyZXF1aXJlIiwiQXJyYXlRdWV1ZSIsIkFycmF5U3RhY2siLCJCaW5hcnlTZWFyY2hUcmVlIiwiTGlua2VkTGlzdFF1ZXVlIiwiTGlua2VkTGlzdFN0YWNrIiwiRG91Ymx5TGlua2VkTGlzdCIsIl9xdWV1ZSIsIkFycmF5IiwiZmlsbCIsIl9mcm9udCIsIl9yZWFyIiwiZW5xdWV1ZSIsIngiLCJpc0VtcHR5IiwiZGVxdWV1ZSIsInZhbCIsImZyb250IiwiX3N0YWNrIiwiX3RvcCIsInRvcCIsIl9kYXRhIiwiX3Jvb3QiLCJsZWZ0IiwiX2xlZnQiLCJjb25zdHJ1Y3RvciIsIk51bWJlciIsInJpZ2h0IiwiX3JpZ2h0Iiwic2VhcmNoIiwiZmluZE1pbiIsImdldE1pbiIsImZpbmRNYXgiLCJnZXRNYXgiLCJkZWxldGVOb2RlIiwibGV2ZWxPcmRlciIsInZhbHMiLCJxdWV1ZSIsInByZU9yZGVyIiwidHJhdmVyc2UiLCJpbk9yZGVyIiwicG9zdE9yZGVyIiwibWF4RGVwdGgiLCJNYXRoIiwibWF4IiwiaXNWYWxpZCIsImlzQlNUIiwibWluIiwiSW5maW5pdHkiLCJwYXRoU3VtIiwic3VtIiwiaGFzUGF0aFN1bSIsImlzU3ltbWV0cmljIiwidmFsaWRhdGVTeW1tZXRyeSIsIkxpbmtMaXN0UXVldWUiLCJzdGFjayIsIkRvdWJsZU5vZGUiXSwibWFwcGluZ3MiOiJDQUFBLFNBQUFBLEVBQUFDLEdBQ0EsaUJBQUFDLFNBQUEsaUJBQUFDLE9BQ0FBLE9BQUFELFFBQUFELElBQ0EsbUJBQUFHLGVBQUFDLElBQ0FELE9BQUEsZ0JBQUFILEdBQ0EsaUJBQUFDLFFBQ0FBLFFBQUEsV0FBQUQsSUFFQUQsRUFBQSxXQUFBQyxJQVJBLENBU0Msb0JBQUFLLFVBQUFDLEtBQUEsV0FDRCxtQkNUQSxJQUFBQyxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFSLFFBR0EsSUFBQUMsRUFBQUssRUFBQUUsR0FBQSxDQUNBQyxFQUFBRCxFQUNBRSxHQUFBLEVBQ0FWLFFBQUEsSUFVQSxPQU5BVyxFQUFBSCxHQUFBSSxLQUFBWCxFQUFBRCxRQUFBQyxJQUFBRCxRQUFBTyxHQUdBTixFQUFBUyxHQUFBLEVBR0FULEVBQUFELFFBMERBLE9BckRBTyxFQUFBTSxFQUFBRixFQUdBSixFQUFBTyxFQUFBUixFQUdBQyxFQUFBUSxFQUFBLFNBQUFmLEVBQUFnQixFQUFBQyxHQUNBVixFQUFBVyxFQUFBbEIsRUFBQWdCLElBQ0FHLE9BQUFDLGVBQUFwQixFQUFBZ0IsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1YsRUFBQWdCLEVBQUEsU0FBQXZCLEdBQ0Esb0JBQUF3QixlQUFBQyxhQUNBTixPQUFBQyxlQUFBcEIsRUFBQXdCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFwQixFQUFBLGNBQWlEMEIsT0FBQSxLQVFqRG5CLEVBQUFvQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBbkIsRUFBQW1CLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFG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SixPQUFPdkQsS0FBS3dDLE1BR2QrQixFQUFpQnZDLFVBQVU4QixRQUFVLFdBQ25DLElBQUs5RCxLQUFLd0MsS0FBTSxPQUFPLEtBSXZCLElBSEEsSUFBSUMsRUFBT3pDLEtBQUt3QyxLQUNab0IsRUFBTyxLQUVKbkIsR0FBTSxDQUNYLElBQUlDLEVBQU9ELEVBQUtDLEtBRWhCRCxFQUFLQyxLQUFPa0IsRUFDUkEsSUFBTUEsRUFBS0EsS0FBT25CLEdBQ3RCbUIsRUFBT25CLEVBQ1BBLEVBQU9DLEVBR1QsT0FEQTFDLEtBQUt3QyxLQUFPb0IsRUFDTDVELEtBQUt3QyxNQVFkK0IsRUFBaUJ2QyxVQUFVK0IsaUJBQW1CLFdBWTVDLE9BWGdCLFNBQVZELEVBQVdsQixHQUNmLEdBQUtBLEdBQVNBLEVBQUtGLEtBQW5CLENBQ0FvQixFQUFRbEIsRUFBS0YsTUFDYixJQUFNWSxFQUFPVixFQUFLRixLQUVsQlksRUFBS1osS0FBT0UsRUFDWkEsRUFBS2dCLEtBQU9OLEVBQ1pWLEVBQUtGLEtBQU8sTUFHZG9CLENBQVE5RCxLQUFLd0MsTUFDTnhDLEtBQUt3QyxNQUdkNUMsRUFBT0QsUUFBVTRFIiwiZmlsZSI6IkFsZ29yaXRobXMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoXCJBbGdvcml0aG1zXCIsIFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcIkFsZ29yaXRobXNcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wiQWxnb3JpdGhtc1wiXSA9IGZhY3RvcnkoKTtcbn0pKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMSk7XG4iLCIndXNlIHN0cmljdCc7XG4vKipcbiAqIE5vZGUgZm9yIGxpbmsgbGlzdFxuICogQHBhcmFtICAgICAgIHtbdHlwZV19IGRhdGEgW2Rlc2NyaXB0aW9uXVxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIE5vZGUoZGF0YSkge1xuICB0aGlzLmRhdGEgPSBkYXRhO1xufVxuLyoqXG4gKiBDcmVhdGUgTGluayBsaXN0XG4gKiBAcGFyYW0gICAgICAge1t0eXBlXX0gZGF0YSBbZGVzY3JpcHRpb25dXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gTGlua2VkTGlzdChkYXRhKSB7XG4gIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcbiAgICB0aGlzLmhlYWQgPSBuZXcgTm9kZShkYXRhWzBdKTtcbiAgICBsZXQgY3VyciA9IHRoaXMuaGVhZDtcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgZGF0YS5sZW5ndGg7ICsraSkge1xuICAgICAgY3Vyci5uZXh0ID0gbmV3IE5vZGUoZGF0YVtpXSk7XG4gICAgICBjdXJyID0gY3Vyci5uZXh0O1xuICAgIH1cbiAgfVxufTtcbi8qKlxuICogUHJpbnQgTGluayBsaXN0IGluIHJlY3Vyc2l2ZSBmYXNoaW9uXG4gKiBAcGFyYW0gIHtbdHlwZV19IG5vZGUgW2Rlc2NyaXB0aW9uXVxuICogQHJldHVybiB7W3R5cGVdfSAgICAgIFtkZXNjcmlwdGlvbl1cbiAqL1xuTGlua2VkTGlzdC5wcmludFJlY3Vyc2lvbiA9IGZ1bmN0aW9uKG5vZGUpIHtcbiAgaWYgKCFub2RlKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIExpbmtlZExpc3QucHJpbnRSZWN1cnNpb24obm9kZS5uZXh0KTtcbn07XG5cbkxpbmtlZExpc3QucHJvdG90eXBlID0ge1xuICAvKipcbiAgICogUHJpbnQgYWxsIHZhbHVlcyBpbiBhIGxpbmtsaXN0XG4gICAqIEByZXR1cm4ge1t0eXBlXX0gW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgcHJpbnQ6IGZ1bmN0aW9uKCkge1xuICAgIGxldCBjdXJyID0gdGhpcy5oZWFkO1xuXG4gICAgd2hpbGUgKGN1cnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGN1cnIuZGF0YSk7XG4gICAgICBjdXJyID0gY3Vyci5uZXh0O1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogQ29udmVydCBsaW5rIGxpc3QgdG8gYXJyYXlcbiAgICogQHJldHVybiB7W3R5cGVdfSBbZGVzY3JpcHRpb25dXG4gICAqL1xuICB0b0FycmF5OiBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBhcnJheSA9IFtdO1xuICAgIGxldCBjdXJyID0gdGhpcy5oZWFkO1xuXG4gICAgd2hpbGUgKGN1cnIpIHtcbiAgICAgIGFycmF5LnB1c2goY3Vyci5kYXRhKTtcbiAgICAgIGN1cnIgPSBjdXJyLm5leHQ7XG4gICAgfVxuICAgIHJldHVybiBhcnJheTtcbiAgfSxcblxuICAvKipcbiAgICogSW5zZXJ0IHZhbHVlIGluIGxpbmtsaXN0IGF0IGluZGV4IG9yIGVuZFxuICAgKiBAcGFyYW0gIHtbdHlwZV19IGRhdGEgIFtkZXNjcmlwdGlvbl1cbiAgICogQHBhcmFtICB7W3R5cGVdfSBpbmRleCBbZGVzY3JpcHRpb25dXG4gICAqIEByZXR1cm4ge1t0eXBlXX0gICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgaW5zZXJ0OiBmdW5jdGlvbihkYXRhLCBpbmRleCkge1xuICAgIGNvbnN0IG5ld05vZGUgPSBuZXcgTm9kZShkYXRhKTtcblxuICAgIGlmICghdGhpcy5oZWFkKSB7XG4gICAgICB0aGlzLmhlYWQgPSBuZXdOb2RlO1xuICAgICAgcmV0dXJuIHRoaXMuaGVhZDtcbiAgICB9XG5cbiAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgIGNvbnN0IHRlbXAgPSB0aGlzLmhlYWQ7XG5cbiAgICAgIHRoaXMuaGVhZCA9IG5ld05vZGU7XG4gICAgICB0aGlzLmhlYWQubmV4dCA9IHRlbXA7XG4gICAgICByZXR1cm4gdGhpcy5oZWFkO1xuICAgIH1cblxuICAgIGxldCBjdXJyID0gdGhpcy5oZWFkO1xuICAgIGxldCBjdXJySW5kZXggPSAxO1xuXG4gICAgd2hpbGUgKGN1cnIubmV4dCkge1xuICAgICAgaWYgKGluZGV4ICE9PSB1bmRlZmluZWQgJiYgY3VyckluZGV4ID09PSBpbmRleCkge1xuICAgICAgICBsZXQgdGVtcCA9IGN1cnIubmV4dDtcblxuICAgICAgICBjdXJyLm5leHQgPSBuZXdOb2RlO1xuICAgICAgICBuZXdOb2RlLm5leHQgPSB0ZW1wO1xuICAgICAgICByZXR1cm4gbmV3Tm9kZTtcbiAgICAgIH1cbiAgICAgIGN1cnIgPSBjdXJyLm5leHQ7XG4gICAgICArK2N1cnJJbmRleDtcbiAgICB9XG4gICAgY3Vyci5uZXh0ID0gbmV3Tm9kZTtcbiAgICByZXR1cm4gbmV3Tm9kZTtcbiAgfSxcblxuICAvKipcbiAgICogUmVtb3ZlIGZpcnN0IG5vZGUgaW4gbGluayBsaXN0XG4gICAqIEByZXR1cm4ge1t0eXBlXX0gW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgc2hpZnQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5oZWFkKSByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBmaXJzdCA9IHRoaXMuaGVhZDtcblxuICAgIHRoaXMuaGVhZCA9IHRoaXMuaGVhZC5uZXh0O1xuICAgIHJldHVybiBmaXJzdDtcbiAgfSxcblxuICAvKipcbiAgICogUmVtb3ZlIGxhc3Qgbm9kZSBpbiBsaW5rIGxpdFxuICAgKiBAcmV0dXJuIHtbdHlwZV19IFtkZXNjcmlwdGlvbl1cbiAgICovXG4gIHBvcDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKCF0aGlzLmhlYWQpIHJldHVybiBudWxsO1xuICAgIGxldCBjdXJyID0gdGhpcy5oZWFkO1xuICAgIGxldCBwcmV2ID0gbnVsbDtcblxuICAgIHdoaWxlIChjdXJyLm5leHQpIHtcbiAgICAgIHByZXYgPSBjdXJyO1xuICAgICAgY3VyciA9IGN1cnIubmV4dDtcbiAgICB9XG4gICAgcHJldi5uZXh0ID0gbnVsbDtcbiAgICByZXR1cm4gY3VycjtcbiAgfSxcblxuICAvKipcbiAgICogRGVsZXRlIG5vZGUgaW4gbGluayBsaXN0IGF0IGluZGV4XG4gICAqIEBwYXJhbSAge1t0eXBlXX0gaW5kZXggW2Rlc2NyaXB0aW9uXVxuICAgKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgIFtkZXNjcmlwdGlvbl1cbiAgICovXG4gIGRlbGV0ZTogZnVuY3Rpb24oaW5kZXgpIHtcbiAgICBpZiAoIXRoaXMuaGVhZCkgcmV0dXJuIG51bGw7XG5cbiAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgIHRoaXMuaGVhZCA9IHRoaXMuaGVhZC5uZXh0O1xuICAgICAgcmV0dXJuIHRoaXMuaGVhZDtcbiAgICB9XG5cbiAgICBsZXQgY3VyciA9IHRoaXMuaGVhZDtcbiAgICBsZXQgY3VyckluZGV4ID0gMDtcbiAgICBsZXQgcHJldiA9IG51bGw7XG5cbiAgICB3aGlsZSAoY3Vyci5uZXh0KSB7XG4gICAgICBpZiAoaW5kZXggIT09IHVuZGVmaW5lZCAmJiBjdXJySW5kZXggPT09IGluZGV4KSB7XG4gICAgICAgIHByZXYubmV4dCA9IGN1cnIubmV4dDtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVhZDtcbiAgICAgIH1cbiAgICAgIHByZXYgPSBjdXJyO1xuICAgICAgY3VyciA9IGN1cnIubmV4dDtcbiAgICAgICsrY3VyckluZGV4O1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5oZWFkO1xuICB9LFxuICAvKipcbiAgICogUmV2ZXJzZSBMaW5rTGlzdFxuICAgKiBAcmV0dXJuIHtbdHlwZV19IFtkZXNjcmlwdGlvbl1cbiAgICovXG4gIHJldmVyc2U6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5oZWFkKSByZXR1cm4gbnVsbDtcbiAgICBsZXQgY3VyciA9IHRoaXMuaGVhZDtcbiAgICBsZXQgcHJldiA9IG51bGw7XG5cbiAgICB3aGlsZSAoY3Vycikge1xuICAgICAgbGV0IG5leHQgPSBjdXJyLm5leHQ7XG5cbiAgICAgIGN1cnIubmV4dCA9IHByZXY7XG4gICAgICBwcmV2ID0gY3VycjtcbiAgICAgIGN1cnIgPSBuZXh0O1xuICAgIH1cbiAgICB0aGlzLmhlYWQgPSBwcmV2O1xuICAgIHJldHVybiB0aGlzLmhlYWQ7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJldmVyc2UgTGluayBsaXN0IHJlY3Vyc2l2ZWx5XG4gICAqIEBwYXJhbSAge1t0eXBlXX0gbm9kZSBbZGVzY3JpcHRpb25dXG4gICAqIEByZXR1cm4ge1t0eXBlXX0gICAgICBbZGVzY3JpcHRpb25dXG4gICAqL1xuICByZXZlcnNlUmVjdXJzaW9uOiBmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKCFub2RlLm5leHQpIHtcbiAgICAgIHRoaXMuaGVhZCA9IG5vZGU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMucmV2ZXJzZVJlY3Vyc2lvbihub2RlLm5leHQpO1xuICAgIGxldCB0ZW1wID0gbm9kZS5uZXh0O1xuXG4gICAgdGVtcC5uZXh0ID0gbm9kZTtcbiAgICBub2RlLm5leHQgPSBudWxsO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgTGlua2VkTGlzdDogTGlua2VkTGlzdCxcbiAgTm9kZTogTm9kZVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IERhdGFTdHJ1Y3R1cmVzIGZyb20gJy4vZGF0YS1zdHJ1Y3R1cmVzJztcblxuZXhwb3J0IHsgRGF0YVN0cnVjdHVyZXMgfTtcbiIsIid1c2Ugc3RyaWN0JztcblxuY29uc3QgeyBMaW5rZWRMaXN0IH0gPSByZXF1aXJlKCcuL2xpbmtlZC1saXN0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBBcnJheVF1ZXVlOiByZXF1aXJlKCcuL2FycmF5LXF1ZXVlJyksXG4gIEFycmF5U3RhY2s6IHJlcXVpcmUoJy4vYXJyYXktc3RhY2snKSxcbiAgQmluYXJ5U2VhcmNoVHJlZTogcmVxdWlyZSgnLi9iaW5hcnktc2VhcmNoLXRyZWUnKSxcbiAgTGlua2VkTGlzdFF1ZXVlOiByZXF1aXJlKCcuL2xpbmtlZC1saXN0LXF1ZXVlJyksXG4gIExpbmtlZExpc3RTdGFjazogcmVxdWlyZSgnLi9saW5rZWQtbGlzdC1zdGFjaycpLFxuICBMaW5rZWRMaXN0OiBMaW5rZWRMaXN0LFxuICBEb3VibHlMaW5rZWRMaXN0OiByZXF1aXJlKCcuL2RvdWJseS1saW5rZWQtbGlzdCcpXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBBcnJheVF1ZXVlKCkge1xuICB0aGlzLl9xdWV1ZSA9IEFycmF5KDEwKS5maWxsKG51bGwpO1xuICB0aGlzLl9mcm9udCA9IC0xO1xuICB0aGlzLl9yZWFyID0gLTE7XG59XG5cbkFycmF5UXVldWUucHJvdG90eXBlID0ge1xuICBlbnF1ZXVlOiBmdW5jdGlvbih4KSB7XG4gICAgaWYgKCh0aGlzLl9yZWFyICsgMSkgJSB0aGlzLl9xdWV1ZS5sZW5ndGggPT09IHRoaXMuX2Zyb250KSByZXR1cm47XG4gICAgaWYgKHRoaXMuaXNFbXB0eSgpKSB0aGlzLl9yZWFyID0gdGhpcy5fZnJvbnQgPSAwO1xuICAgIGVsc2UgdGhpcy5fcmVhciA9ICh0aGlzLl9yZWFyICsgMSkgJSB0aGlzLl9xdWV1ZS5sZW5ndGg7XG4gICAgdGhpcy5fcXVldWVbdGhpcy5fcmVhcl0gPSB4O1xuICB9LFxuXG4gIGRlcXVldWU6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLmlzRW1wdHkoKSkgcmV0dXJuO1xuICAgIGxldCB2YWw7XG5cbiAgICBpZiAodGhpcy5fZnJvbnQgPT09IHRoaXMuX3JlYXIpIHtcbiAgICAgIHZhbCA9IHRoaXMuX3F1ZXVlW3RoaXMuX2Zyb250XTtcbiAgICAgIHRoaXMuX2Zyb250ID0gdGhpcy5fcmVhciA9IC0xO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWwgPSB0aGlzLl9xdWV1ZVt0aGlzLl9mcm9udF07XG4gICAgICArK3RoaXMuX2Zyb250O1xuICAgIH1cbiAgICByZXR1cm4gdmFsO1xuICB9LFxuXG4gIGZyb250OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fcXVldWVbdGhpcy5fZnJvbnRdO1xuICB9LFxuXG4gIGlzRW1wdHk6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9mcm9udCA9PT0gLSAxICYmIHRoaXMuX3JlYXIgPT09IC0xO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5UXVldWU7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIEFycmF5U3RhY2soKSB7XG4gIHRoaXMuX3N0YWNrID0gW107XG4gIHRoaXMuX3RvcCA9IC0xO1xufVxuXG5BcnJheVN0YWNrLnByb3RvdHlwZSA9IHtcbiAgcHVzaDogZnVuY3Rpb24oZGF0YSkge1xuICAgICsrdGhpcy5fdG9wO1xuICAgIGlmICh0aGlzLl9zdGFjay5sZW5ndGggPj0gdGhpcy5fdG9wICsgMSkgdGhpcy5fc3RhY2tbdGhpcy5fdG9wXSA9IGRhdGE7XG4gICAgZWxzZSB0aGlzLl9zdGFjay5wdXNoKGRhdGEpO1xuICAgIHJldHVybiB0aGlzLl9zdGFjaztcbiAgfSxcblxuICBwb3A6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLmlzRW1wdHkoKSkgcmV0dXJuO1xuICAgIGNvbnN0IHRvcCA9IHRoaXMuX3N0YWNrW3RoaXMuX3RvcF07XG5cbiAgICB0aGlzLl9zdGFja1t0aGlzLl90b3BdID0gdW5kZWZpbmVkO1xuICAgIC0tdGhpcy5fdG9wO1xuICAgIHJldHVybiB0b3A7XG4gIH0sXG5cbiAgdG9wOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhY2tbdGhpcy5fdG9wXTtcbiAgfSxcblxuICBpc0VtcHR5OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fdG9wID09PSAtMTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcnJheVN0YWNrO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBOb2RlKHZhbCkge1xuICB0aGlzLl9kYXRhID0gdmFsO1xufTtcblxuTm9kZS5wcm90b3R5cGUgPSB7XG4gIGdldCBkYXRhKCkge1xuICAgIHJldHVybiB0aGlzLl9kYXRhO1xuICB9LFxuXG4gIHNldCBkYXRhKHZhbCkge1xuICAgIHRoaXMuX2RhdGEgPSB2YWw7XG4gIH0sXG5cbiAgZ2V0IGxlZnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xlZnQ7XG4gIH0sXG5cbiAgc2V0IGxlZnQobm9kZSkge1xuICAgIGlmIChub2RlICYmIG5vZGUuY29uc3RydWN0b3IgPT09IE51bWJlcikgdGhpcy5fbGVmdCA9IG5ldyBOb2RlKG5vZGUpO1xuICAgIGVsc2UgdGhpcy5fbGVmdCA9IG5vZGU7XG4gIH0sXG5cbiAgZ2V0IHJpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLl9yaWdodDtcbiAgfSxcblxuICBzZXQgcmlnaHQobm9kZSkge1xuICAgIGlmIChub2RlICYmIG5vZGUuY29uc3RydWN0b3IgPT09IE51bWJlcikgdGhpcy5fcmlnaHQgPSBuZXcgTm9kZShub2RlKTtcbiAgICBlbHNlIHRoaXMuX3JpZ2h0ID0gbm9kZTtcbiAgfSxcblxuICBpbnNlcnQ6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICBpZiAoIXRoaXMuZGF0YSkgdGhpcy5kYXRhID0gZGF0YTtcbiAgICBlbHNlIGlmIChkYXRhID4gdGhpcy5kYXRhKSB7XG4gICAgICBpZiAodGhpcy5yaWdodCkgdGhpcy5yaWdodC5pbnNlcnQoZGF0YSk7XG4gICAgICBlbHNlIHRoaXMucmlnaHQgPSBkYXRhO1xuICAgIH0gZWxzZSBpZiAoZGF0YSA8IHRoaXMuZGF0YSkge1xuICAgICAgaWYgKHRoaXMubGVmdCkgdGhpcy5sZWZ0Lmluc2VydChkYXRhKTtcbiAgICAgIGVsc2UgdGhpcy5sZWZ0ID0gZGF0YTtcbiAgICB9XG4gIH0sXG5cbiAgc2VhcmNoOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgaWYgKCF0aGlzLmRhdGEpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoZGF0YSA+IHRoaXMuZGF0YSAmJiB0aGlzLnJpZ2h0KSByZXR1cm4gdGhpcy5yaWdodC5zZWFyY2goZGF0YSk7XG4gICAgaWYgKGRhdGEgPCB0aGlzLmRhdGEgJiYgdGhpcy5sZWZ0KSByZXR1cm4gdGhpcy5sZWZ0LnNlYXJjaChkYXRhKTtcbiAgICByZXR1cm4gZGF0YSA9PT0gdGhpcy5kYXRhO1xuICB9XG59O1xuXG5mdW5jdGlvbiBCaW5hcnlTZWFyY2hUcmVlKGRhdGEpIHtcbiAgdGhpcy5fcm9vdCA9IG5ldyBOb2RlKGRhdGEpO1xufTtcblxuQmluYXJ5U2VhcmNoVHJlZS5wcm90b3R5cGUgPSB7XG4gIGdldCByb290KCkge1xuICAgIHJldHVybiB0aGlzLl9yb290O1xuICB9LFxuXG4gIHNldCByb290KG5vZGUpIHtcbiAgICB0aGlzLl9yb290ID0gbm9kZTtcbiAgfSxcblxuICBpbnNlcnQ6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICBpZiAoIXRoaXMucm9vdCkgdGhpcy5yb290ID0gbmV3IE5vZGUoZGF0YSk7XG4gICAgZWxzZSB0aGlzLnJvb3QuaW5zZXJ0KGRhdGEpO1xuICB9LFxuXG4gIHNlYXJjaDogZnVuY3Rpb24oZGF0YSkge1xuICAgIGlmICghdGhpcy5yb290KSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMucm9vdC5zZWFyY2goZGF0YSk7XG4gIH0sXG5cbiAgZmluZE1pbjogZnVuY3Rpb24oKSB7XG4gICAgaWYgKCF0aGlzLnJvb3QpIHJldHVybjtcbiAgICBjb25zdCBnZXRNaW4gPSAobm9kZSkgPT4ge1xuICAgICAgaWYgKG5vZGUubGVmdCkgcmV0dXJuIGdldE1pbihub2RlLmxlZnQpO1xuICAgICAgcmV0dXJuIG5vZGUuZGF0YTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGdldE1pbih0aGlzLnJvb3QpO1xuICB9LFxuXG4gIGZpbmRNYXg6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5yb290KSByZXR1cm47XG4gICAgY29uc3QgZ2V0TWF4ID0gKG5vZGUpID0+IHtcbiAgICAgIGlmIChub2RlLnJpZ2h0KSByZXR1cm4gZ2V0TWF4KG5vZGUucmlnaHQpO1xuICAgICAgcmV0dXJuIG5vZGUuZGF0YTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGdldE1heCh0aGlzLnJvb3QpO1xuICB9LFxuXG4gIGRlbGV0ZTogZnVuY3Rpb24odmFsKSB7XG4gICAgY29uc3QgZGVsZXRlTm9kZSA9IChyb290LCB2YWwpID0+IHtcbiAgICAgIC8vIElmIE5vIE5vZGUgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgaWYgKCFyb290KSByZXR1cm47XG4gICAgICAvLyBJZiB2YWwgaXMgbGVzcyB0aGFuIGN1cnJlbnQgbm9kZSBkYXRhLiBDb250aW51ZSBvbiB0byBsZWZ0IGNoaWxkLlxuICAgICAgaWYgKHZhbCA8IHJvb3QuZGF0YSkgcmV0dXJuIGRlbGV0ZU5vZGUocm9vdC5sZWZ0LCB2YWwsIHJvb3QpO1xuICAgICAgLy8gSWYgdmFsIGlzIGdyZWF0ZXIgdGhhbiBjdXJyZW50IG5vZGUgZGF0YS4gQ29udGludWUgb24gdG8gcmlnaHQgY2hpbGQuXG4gICAgICBpZiAodmFsID4gcm9vdC5kYXRhKSByZXR1cm4gZGVsZXRlTm9kZShyb290LnJpZ2h0LCB2YWwsIHJvb3QpO1xuICAgICAgLy8gQ2FzZSAxOiBObyBjaGlsZHJlbiwgZGVhbGxvY2F0ZSBjaGlsZCBmcm9tIHBhcmVudFxuICAgICAgaWYgKHJvb3QubGVmdCAmJiByb290LnJpZ2h0KSB7XG4gICAgICAgIC8vIENhc2UgMzogaWYgMiBjaGlsZHJlblxuICAgICAgICAvLyBGaW5kIG1pbmltdW0gdmFsdWUgb2YgdGhlIHJpZ2h0IG5vZGVcbiAgICAgICAgbGV0IHRlbXAgPSByb290LnJpZ2h0O1xuXG4gICAgICAgIHdoaWxlICh0ZW1wLmxlZnQpIHRlbXAgPSB0ZW1wLmxlZnQ7XG4gICAgICAgIC8vIHdyaXRlIG5vZGUgZGF0YSB0byB0aGUgbWluaW11bSB2YWx1ZXNcbiAgICAgICAgcm9vdC5kYXRhID0gdGVtcC5kYXRhO1xuICAgICAgICAvLyBNb3ZlIG9uIHRvIHRoZSByaWdodCBhbmQgY29udGludWUgb25cbiAgICAgICAgcm9vdC5yaWdodCA9IGRlbGV0ZU5vZGUocm9vdC5yaWdodCwgdGVtcC5kYXRhKTtcbiAgICAgICAgcmV0dXJuIHJvb3Q7XG4gICAgICB9XG4gICAgICByZXR1cm4gcm9vdC5sZWZ0IHx8IHJvb3QucmlnaHQ7XG4gICAgfTtcblxuICAgIGRlbGV0ZU5vZGUodGhpcy5yb290LCB2YWwpO1xuICB9LFxuXG4gIGxldmVsT3JkZXI6IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IHZhbHMgPSBbXTtcblxuICAgIGlmICh0aGlzLnJvb3QpIHtcbiAgICAgIGNvbnN0IHF1ZXVlID0gW107XG5cbiAgICAgIHF1ZXVlLnB1c2godGhpcy5yb290KTtcbiAgICAgIHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGxldCBjdXJyID0gcXVldWUuc2hpZnQoKTtcblxuICAgICAgICB2YWxzLnB1c2goY3Vyci5kYXRhKTtcbiAgICAgICAgaWYgKGN1cnIubGVmdCkgcXVldWUucHVzaChjdXJyLmxlZnQpO1xuICAgICAgICBpZiAoY3Vyci5yaWdodCkgcXVldWUucHVzaChjdXJyLnJpZ2h0KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHZhbHM7XG4gIH0sXG5cbiAgcHJlT3JkZXI6IGZ1bmN0aW9uKCkge1xuICAgIGxldCB2YWxzID0gW107XG5cbiAgICBjb25zdCB0cmF2ZXJzZSA9IChub2RlKSA9PiB7XG4gICAgICB2YWxzLnB1c2gobm9kZS5kYXRhKTtcbiAgICAgIGlmIChub2RlLmxlZnQpIHRyYXZlcnNlKG5vZGUubGVmdCk7XG4gICAgICBpZiAobm9kZS5yaWdodCkgdHJhdmVyc2Uobm9kZS5yaWdodCk7XG4gICAgfTtcblxuICAgIGlmICh0aGlzLnJvb3QpIHRyYXZlcnNlKHRoaXMucm9vdCk7XG4gICAgcmV0dXJuIHZhbHM7XG4gIH0sXG5cbiAgaW5PcmRlcjogZnVuY3Rpb24oKSB7XG4gICAgbGV0IHZhbHMgPSBbXTtcblxuICAgIGNvbnN0IHRyYXZlcnNlID0gKG5vZGUpID0+IHtcbiAgICAgIGlmIChub2RlLmxlZnQpIHRyYXZlcnNlKG5vZGUubGVmdCk7XG4gICAgICB2YWxzLnB1c2gobm9kZS5kYXRhKTtcbiAgICAgIGlmIChub2RlLnJpZ2h0KSB0cmF2ZXJzZShub2RlLnJpZ2h0KTtcbiAgICB9O1xuXG4gICAgaWYgKHRoaXMucm9vdCkgdHJhdmVyc2UodGhpcy5yb290KTtcbiAgICByZXR1cm4gdmFscztcbiAgfSxcblxuICBwb3N0T3JkZXI6IGZ1bmN0aW9uKCkge1xuICAgIGxldCB2YWxzID0gW107XG5cbiAgICBjb25zdCB0cmF2ZXJzZSA9IChub2RlKSA9PiB7XG4gICAgICBpZiAobm9kZS5sZWZ0KSB0cmF2ZXJzZShub2RlLmxlZnQpO1xuICAgICAgaWYgKG5vZGUucmlnaHQpIHRyYXZlcnNlKG5vZGUucmlnaHQpO1xuICAgICAgdmFscy5wdXNoKG5vZGUuZGF0YSk7XG4gICAgfTtcblxuICAgIGlmICh0aGlzLnJvb3QpIHRyYXZlcnNlKHRoaXMucm9vdCk7XG4gICAgcmV0dXJuIHZhbHM7XG4gIH0sXG5cbiAgbWF4RGVwdGg6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5yb290KSByZXR1cm4gMDtcbiAgICBjb25zdCBtYXhEZXB0aCA9IChub2RlKSA9PiB7XG4gICAgICBpZiAoIW5vZGUpIHJldHVybiAwO1xuICAgICAgcmV0dXJuIE1hdGgubWF4KG1heERlcHRoKG5vZGUubGVmdCksIG1heERlcHRoKG5vZGUucmlnaHQpKSArIDE7XG4gICAgfTtcblxuICAgIHJldHVybiBtYXhEZXB0aCh0aGlzLnJvb3QpO1xuICB9LFxuXG4gIGlzVmFsaWQ6IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IGlzQlNUID0gKG5vZGUsIG1pbiwgbWF4KSA9PiB7XG4gICAgICAvLyBJZiBubyBOb2RlIHRoZW4gd2UgaGF2ZSByZWFjaGVkIHRoZSBlbmQgb2YgdGhlIHRyZWUuXG4gICAgICAvLyBSZXR1cm4gdHJ1ZVxuICAgICAgaWYgKCFub2RlKSByZXR1cm4gdHJ1ZTtcbiAgICAgIC8vIFZhbGlkYXRlIGlmIHRoZSBkYXRhIGlzIGxlc3MgdGhhbiBvciBlcXVhbCB0byB0aGUgbWluIG9yIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byBtYXguXG4gICAgICAvLyBUaGVuIHRoZSB0cmVlIGlzIG5vdCBhIHZhbGlkIHNlYXJjaCB0cmVlLlxuICAgICAgaWYgKG5vZGUuZGF0YSA8PSBtaW4gfHwgbm9kZS5kYXRhID49IG1heCkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIGlzQlNUKG5vZGUubGVmdCwgbWluLCBub2RlLmRhdGEpICYmIGlzQlNUKG5vZGUucmlnaHQsIG5vZGUuZGF0YSwgbWF4KTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGlzQlNUKHRoaXMucm9vdCwgLUluZmluaXR5LCBJbmZpbml0eSk7XG4gIH0sXG5cbiAgcGF0aFN1bTogZnVuY3Rpb24oc3VtKSB7XG4gICAgY29uc3QgaGFzUGF0aFN1bSA9IChyb290LCBzdW0pID0+IHtcbiAgICAgIGlmICghcm9vdCkgcmV0dXJuIGZhbHNlO1xuICAgICAgc3VtIC09IHJvb3QuZGF0YTtcbiAgICAgIGlmICghcm9vdC5sZWZ0ICYmICFyb290LnJpZ2h0KSByZXR1cm4gc3VtID09PSAwO1xuICAgICAgcmV0dXJuIGhhc1BhdGhTdW0ocm9vdC5sZWZ0LCBzdW0pIHx8IGhhc1BhdGhTdW0ocm9vdC5yaWdodCwgc3VtKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGhhc1BhdGhTdW0odGhpcy5yb290LCBzdW0pO1xuICB9LFxuXG4gIGlzU3ltbWV0cmljOiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXRoaXMucm9vdCkgcmV0dXJuIHRydWU7XG4gICAgY29uc3QgdmFsaWRhdGVTeW1tZXRyeSA9IChsZWZ0LCByaWdodCkgPT4ge1xuICAgICAgaWYgKCFsZWZ0IHx8ICFyaWdodCkgcmV0dXJuIGxlZnQgPT09IHJpZ2h0O1xuICAgICAgaWYgKGxlZnQuZGF0YSAhPT0gcmlnaHQuZGF0YSkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIHZhbGlkYXRlU3ltbWV0cnkobGVmdC5sZWZ0LCByaWdodC5yaWdodCkgJiYgdmFsaWRhdGVTeW1tZXRyeShsZWZ0LnJpZ2h0LCByaWdodC5sZWZ0KTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHZhbGlkYXRlU3ltbWV0cnkodGhpcy5yb290LmxlZnQsIHRoaXMucm9vdC5yaWdodCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQmluYXJ5U2VhcmNoVHJlZTtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gTm9kZSh2YWwpIHtcbiAgdGhpcy5kYXRhID0gdmFsO1xufVxuXG5mdW5jdGlvbiBMaW5rTGlzdFF1ZXVlKCkge31cblxuTGlua0xpc3RRdWV1ZS5wcm90b3R5cGUgPSB7XG4gIGVucXVldWU6IGZ1bmN0aW9uKHZhbCkge1xuICAgIGlmICh0aGlzLmlzRW1wdHkoKSkgdGhpcy5fcmVhciA9IHRoaXMuX2Zyb250ID0gbmV3IE5vZGUodmFsKTtcbiAgICBlbHNlIHRoaXMuX3JlYXIgPSB0aGlzLl9yZWFyLm5leHQgPSBuZXcgTm9kZSh2YWwpO1xuICB9LFxuXG4gIGRlcXVldWU6IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IG5vZGUgPSB0aGlzLl9mcm9udDtcblxuICAgIGlmIChub2RlID09PSB0aGlzLl9yZWFyKSB0aGlzLl9yZWFyID0gdGhpcy5fZnJvbnQgPSB1bmRlZmluZWQ7XG4gICAgZWxzZSBpZiAobm9kZS5uZXh0KSB0aGlzLl9mcm9udCA9IG5vZGUubmV4dDtcbiAgICByZXR1cm4gbm9kZS5kYXRhO1xuICB9LFxuXG4gIGZyb250OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fZnJvbnQuZGF0YTtcbiAgfSxcblxuICBpc0VtcHR5OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fZnJvbnQgPT09IHVuZGVmaW5lZCAmJiB0aGlzLl9yZWFyID09PSB1bmRlZmluZWQ7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTGlua0xpc3RRdWV1ZTtcbiIsIi8qKlxuICogTm9kZSBmb3IgbGluayBsaXN0XG4gKiBAcGFyYW0gICAgICAge1t0eXBlXX0gZGF0YSBbZGVzY3JpcHRpb25dXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gTm9kZShkYXRhKSB7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG59XG4vKipcbiAqIENyZWF0ZSBMaW5rIGxpc3RcbiAqIEBwYXJhbSAgICAgICB7W3R5cGVdfSBkYXRhIFtkZXNjcmlwdGlvbl1cbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBMaW5rZWRMaXN0U3RhY2soKSB7fVxuLyoqXG4gKiBQcmludCBMaW5rIGxpc3QgaW4gcmVjdXJzaXZlIGZhc2hpb25cbiAqIEBwYXJhbSAge1t0eXBlXX0gbm9kZSBbZGVzY3JpcHRpb25dXG4gKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgW2Rlc2NyaXB0aW9uXVxuICovXG5MaW5rZWRMaXN0U3RhY2sucHJpbnRSZWN1cnNpb24gPSBmdW5jdGlvbihub2RlKSB7XG4gIGlmICghbm9kZSkgcmV0dXJuIG51bGw7XG4gIHJldHVybiBMaW5rZWRMaXN0U3RhY2sucHJpbnRSZWN1cnNpb24obm9kZS5uZXh0KTtcbn07XG5cbkxpbmtlZExpc3RTdGFjay5wcm90b3R5cGUgPSB7XG4gIC8qKlxuICAgKiBQcmludCBhbGwgdmFsdWVzIGluIGEgbGlua2xpc3RcbiAgICogQHJldHVybiB7W3R5cGVdfSBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBwcmludDogZnVuY3Rpb24oKSB7XG4gICAgbGV0IGN1cnIgPSB0aGlzLmhlYWQ7XG5cbiAgICB3aGlsZSAoY3Vycikge1xuICAgICAgY29uc29sZS5sb2coY3Vyci5kYXRhKTtcbiAgICAgIGN1cnIgPSBjdXJyLm5leHQ7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBDb252ZXJ0IGxpbmsgbGlzdCB0byBhcnJheVxuICAgKiBAcmV0dXJuIHtbdHlwZV19IFtkZXNjcmlwdGlvbl1cbiAgICovXG4gIHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IGFycmF5ID0gW107XG4gICAgbGV0IGN1cnIgPSB0aGlzLmhlYWQ7XG5cbiAgICB3aGlsZSAoY3Vycikge1xuICAgICAgYXJyYXkucHVzaChjdXJyLmRhdGEpO1xuICAgICAgY3VyciA9IGN1cnIubmV4dDtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5O1xuICB9LFxuXG4gIC8qKlxuICAgKiBJbnNlcnQgdmFsdWUgaW4gbGlua2xpc3QgYXQgaW5kZXggb3IgZW5kXG4gICAqIEBwYXJhbSAge1t0eXBlXX0gZGF0YSAgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcGFyYW0gIHtbdHlwZV19IGluZGV4IFtkZXNjcmlwdGlvbl1cbiAgICogQHJldHVybiB7W3R5cGVdfSAgICAgICBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBwdXNoOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgY29uc3QgbmV3Tm9kZSA9IG5ldyBOb2RlKGRhdGEpO1xuXG4gICAgbmV3Tm9kZS5uZXh0ID0gdGhpcy5oZWFkO1xuICAgIHRoaXMuaGVhZCA9IG5ld05vZGU7XG4gICAgcmV0dXJuIHRoaXMuaGVhZC5kYXRhO1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZW1vdmUgZmlyc3Qgbm9kZSBpbiBsaW5rIGxpc3RcbiAgICogQHJldHVybiB7W3R5cGVdfSBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBwb3A6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5oZWFkKSByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBmaXJzdCA9IHRoaXMuaGVhZDtcblxuICAgIHRoaXMuaGVhZCA9IGZpcnN0Lm5leHQ7XG4gICAgcmV0dXJuIGZpcnN0LmRhdGE7XG4gIH0sXG5cbiAgdG9wOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5oZWFkLmRhdGE7XG4gIH0sXG5cbiAgaXNFbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICF0aGlzLmhlYWQ7XG4gIH0sXG5cbiAgLyoqXG4gICAqIExpbmtMaXN0IHJldmVyc2FsIHVzaW5nIHN0YWNrcyBpcyBhbiBPKE4gKyBNKSB0aW1lIGFuZCBzcGFjZSBjb21wbGV4aXR5XG4gICAqIEBwYXJhbSAge1t0eXBlXX0gbGlua0xpc3QgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgICAgIFtkZXNjcmlwdGlvbl1cbiAgICovXG4gIHJldmVyc2U6IGZ1bmN0aW9uKCkge1xuICAgIC8vIENyZWF0ZSBhIHN0YWNrIHRvIHN0b3JlIHRoZSBsaW5rbGlzdCB2YWx1ZXNcbiAgICBjb25zdCBzdGFjayA9IG5ldyBMaW5rZWRMaXN0U3RhY2soKTtcblxuICAgIC8vIHB1c2ggYWxsIGxpbmsgbGlzdCB2YWx1ZXMgaW4gc3RhY2sgYnkgc2hpZnRpbmcgdGhlIGZpcnN0IHZhbHVlLlxuICAgIHdoaWxlICh0aGlzLmhlYWQpIHN0YWNrLnB1c2godGhpcy5zaGlmdCgpKTtcbiAgICAvLyByZS1pbnNlcnQgYWxsIG9mIHRoZSBsaW5rIGxpc3QgdmFsdWVzIGJ5IHBvcHBpbmcgdGhlIHN0YWNrXG4gICAgd2hpbGUgKCFzdGFjay5pc0VtcHR5KCkpIHRoaXMuaW5zZXJ0KHN0YWNrLnBvcCgpKTtcbiAgICAvLyByZXR1cm4gdGhlIG5ldyBzdGFja1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IExpbmtlZExpc3RTdGFjaztcbiIsIid1c2Ugc3RyaWN0JztcblxuY29uc3Qge1xuICBMaW5rZWRMaXN0LFxuICBOb2RlXG59ID0gcmVxdWlyZSgnLi9saW5rZWQtbGlzdCcpO1xuXG5mdW5jdGlvbiBEb3VibGVOb2RlKGRhdGEpIHtcbiAgTm9kZS5jYWxsKHRoaXMsIGRhdGEpO1xufTtcblxuLy8gY3JlYXRlIGNvbnN0cnVjdG9yZSB3aXRoIExpbmtlZExpc3QgaW5oZXJpdGFuY2VcbmZ1bmN0aW9uIERvdWJseUxpbmtlZExpc3QoZGF0YSkge1xuICAvLyBMaW5rZWRMaXN0LmNhbGwodGhpcywgZGF0YSk7XG4gIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcbiAgICB0aGlzLmhlYWQgPSBuZXcgRG91YmxlTm9kZShkYXRhWzBdKTtcbiAgICBsZXQgY3VyciA9IHRoaXMuaGVhZDtcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgZGF0YS5sZW5ndGg7ICsraSkge1xuICAgICAgbGV0IG5ld05vZGUgPSBuZXcgRG91YmxlTm9kZShkYXRhW2ldKTtcblxuICAgICAgbmV3Tm9kZS5wcmV2ID0gY3VycjtcbiAgICAgIGN1cnIubmV4dCA9IG5ld05vZGU7XG4gICAgICBjdXJyID0gY3Vyci5uZXh0O1xuICAgIH1cbiAgfVxufTtcbi8vIEluaGVyaXQgYWxsIHByb3RvdHlwZSBmcm9tIExpbmtlZExpc3RcbkRvdWJseUxpbmtlZExpc3QucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShMaW5rZWRMaXN0LnByb3RvdHlwZSk7XG4vLyBvdmVyd3JpdGUgcHJvdG90eXBlc1xuLy8gUmVhc3NpZ24gY29uc3RydWN0b3IgcHJvdG90eXBlXG5Eb3VibHlMaW5rZWRMaXN0LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IERvdWJseUxpbmtlZExpc3Q7XG5Eb3VibHlMaW5rZWRMaXN0LnByb3RvdHlwZS5pbnNlcnQgPSBmdW5jdGlvbihkYXRhLCBpbmRleCkge1xuICBjb25zdCBuZXdOb2RlID0gbmV3IE5vZGUoZGF0YSk7XG5cbiAgaWYgKCF0aGlzLmhlYWQpIHtcbiAgICB0aGlzLmhlYWQgPSBuZXdOb2RlO1xuICAgIHJldHVybiB0aGlzLmhlYWQ7XG4gIH1cblxuICBpZiAoaW5kZXggPT09IDApIHtcbiAgICBjb25zdCB0ZW1wID0gdGhpcy5oZWFkO1xuXG4gICAgdGhpcy5oZWFkID0gbmV3Tm9kZTtcbiAgICB0aGlzLmhlYWQubmV4dCA9IHRlbXA7XG4gICAgcmV0dXJuIHRoaXMuaGVhZDtcbiAgfVxuXG4gIGxldCBjdXJyID0gdGhpcy5oZWFkO1xuICBsZXQgY3VyckluZGV4ID0gMTtcblxuICB3aGlsZSAoY3Vyci5uZXh0KSB7XG4gICAgaWYgKGluZGV4ICE9PSB1bmRlZmluZWQgJiYgY3VyckluZGV4ID09PSBpbmRleCkge1xuICAgICAgbGV0IHRlbXAgPSBjdXJyLm5leHQ7XG5cbiAgICAgIGN1cnIubmV4dCA9IG5ld05vZGU7XG4gICAgICBuZXdOb2RlLnByZXYgPSBjdXJyO1xuICAgICAgbmV3Tm9kZS5uZXh0ID0gdGVtcDtcbiAgICAgIHRlbXAucHJldiA9IG5ld05vZGU7XG4gICAgICByZXR1cm4gbmV3Tm9kZTtcbiAgICB9XG4gICAgY3VyciA9IGN1cnIubmV4dDtcbiAgICArK2N1cnJJbmRleDtcbiAgfVxuICBjdXJyLm5leHQgPSBuZXdOb2RlO1xuICBuZXdOb2RlLnByZXYgPSBjdXJyO1xuICByZXR1cm4gbmV3Tm9kZTtcbn07XG5cbkRvdWJseUxpbmtlZExpc3QucHJvdG90eXBlLnNoaWZ0ID0gZnVuY3Rpb24oKSB7XG4gIGlmICghdGhpcy5oZWFkKSByZXR1cm47XG4gIGNvbnN0IGZpcnN0ID0gdGhpcy5oZWFkO1xuXG4gIHRoaXMuaGVhZCA9IGZpcnN0Lm5leHQ7XG4gIHRoaXMuaGVhZC5wcmV2ID0gbnVsbDtcbiAgcmV0dXJuIGZpcnN0O1xufTtcblxuRG91Ymx5TGlua2VkTGlzdC5wcm90b3R5cGUuZGVsZXRlID0gZnVuY3Rpb24oaW5kZXgpIHtcbiAgaWYgKCF0aGlzLmhlYWQpIHJldHVybiBudWxsO1xuXG4gIGlmIChpbmRleCA9PT0gMCkge1xuICAgIHRoaXMuaGVhZCA9IHRoaXMuaGVhZC5uZXh0O1xuICAgIHJldHVybiB0aGlzLmhlYWQ7XG4gIH1cblxuICBsZXQgY3VyciA9IHRoaXMuaGVhZDtcbiAgbGV0IGN1cnJJbmRleCA9IDA7XG4gIGxldCBwcmV2ID0gbnVsbDtcblxuICB3aGlsZSAoY3Vyci5uZXh0KSB7XG4gICAgaWYgKGluZGV4ICE9PSB1bmRlZmluZWQgJiYgY3VyckluZGV4ID09PSBpbmRleCkge1xuICAgICAgY29uc3QgbmV4dCA9IGN1cnIubmV4dDtcblxuICAgICAgcHJldi5uZXh0ID0gbmV4dDtcbiAgICAgIG5leHQucHJldiA9IHByZXY7XG4gICAgICByZXR1cm4gdGhpcy5oZWFkO1xuICAgIH1cbiAgICBwcmV2ID0gY3VycjtcbiAgICBjdXJyID0gY3Vyci5uZXh0O1xuICAgICsrY3VyckluZGV4O1xuICB9XG4gIHJldHVybiB0aGlzLmhlYWQ7XG59O1xuXG5Eb3VibHlMaW5rZWRMaXN0LnByb3RvdHlwZS5yZXZlcnNlID0gZnVuY3Rpb24oKSB7XG4gIGlmICghdGhpcy5oZWFkKSByZXR1cm4gbnVsbDtcbiAgbGV0IGN1cnIgPSB0aGlzLmhlYWQ7XG4gIGxldCBwcmV2ID0gbnVsbDtcblxuICB3aGlsZSAoY3Vycikge1xuICAgIGxldCBuZXh0ID0gY3Vyci5uZXh0O1xuXG4gICAgY3Vyci5uZXh0ID0gcHJldjtcbiAgICBpZiAocHJldikgcHJldi5wcmV2ID0gY3VycjtcbiAgICBwcmV2ID0gY3VycjtcbiAgICBjdXJyID0gbmV4dDtcbiAgfVxuICB0aGlzLmhlYWQgPSBwcmV2O1xuICByZXR1cm4gdGhpcy5oZWFkO1xufTtcblxuLyoqXG4gKiBSZXZlcnNlIExpbmsgbGlzdCByZWN1cnNpdmVseVxuICogQHBhcmFtICB7W3R5cGVdfSBub2RlIFtkZXNjcmlwdGlvbl1cbiAqIEByZXR1cm4ge1t0eXBlXX0gICAgICBbZGVzY3JpcHRpb25dXG4gKi9cbkRvdWJseUxpbmtlZExpc3QucHJvdG90eXBlLnJldmVyc2VSZWN1cnNpb24gPSBmdW5jdGlvbigpIHtcbiAgY29uc3QgcmV2ZXJzZSA9IChub2RlKSA9PiB7XG4gICAgaWYgKCFub2RlIHx8ICFub2RlLm5leHQpIHJldHVybjtcbiAgICByZXZlcnNlKG5vZGUubmV4dCk7XG4gICAgY29uc3QgdGVtcCA9IG5vZGUubmV4dDtcblxuICAgIHRlbXAubmV4dCA9IG5vZGU7XG4gICAgbm9kZS5wcmV2ID0gdGVtcDtcbiAgICBub2RlLm5leHQgPSBudWxsO1xuICB9O1xuXG4gIHJldmVyc2UodGhpcy5oZWFkKTtcbiAgcmV0dXJuIHRoaXMuaGVhZDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRG91Ymx5TGlua2VkTGlzdDtcbiJdLCJzb3VyY2VSb290IjoiIn0=